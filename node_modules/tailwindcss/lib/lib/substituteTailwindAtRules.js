'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (config, { components: pluginComponents }, generatedUtilities) {
  return function (css) {
    css.walkAtRules('tailwind', atRule => {
      if (atRule.params === 'preflight') {
        const preflightTree = _postcss2.default.parse(_fs2.default.readFileSync(`${__dirname}/../../css/preflight.css`, 'utf8'));

        preflightTree.walk(node => node.source = atRule.source);

        atRule.before(preflightTree);
        atRule.remove();
      }

      if (atRule.params === 'components') {
        const pluginComponentTree = _postcss2.default.root({
          nodes: pluginComponents
        });

        pluginComponentTree.walk(node => node.source = atRule.source);

        atRule.before(pluginComponentTree);
        atRule.remove();
      }

      if (atRule.params === 'utilities') {
        // This needs to be cloned here or utilities end up being empty
        // in real projects. No idea why, struggling to reproduce in a
        // test. Hot fixing to publish a patch.
        const clonedUtilities = generatedUtilities.clone();

        clonedUtilities.walk(node => node.source = atRule.source);
        atRule.before(clonedUtilities);
        atRule.remove();
      }
    });
  };
};

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }